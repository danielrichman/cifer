Useful book on a handful of classical cipher techniques:
http://books.google.co.uk/books?id=dx8zM-VeKI8C

"Teacher pack" from the website, gives clear, concise techniques:
http://www.cipher.maths.soton.ac.uk/TeachersPack.pdf

Ciphers we need to crack (cross them off):
[X] Caesar
[X] Vigenere
[X] Affine
[ ] Keyword
[ ] Bacon
[ ] Polybius Square
[ ] Playfair
[ ] Double Playfair
[ ] Autokey
[ ] Alberti
[ ] ADFGVX
[ ] Solitaire
[ ] Hill
[ ] Book
[ ] Enigma
[ ] Fialka         (Is this really needed? I doubt that it will be used again)

Features that are needed
[X] Reimplement fast dictionary searching (Assigned to DR)
[X] Bigrams and Trigrams frequency data
[ ] Detection and guessing of cipher, eg- Delta IC tells us that the letters are
    not totally malformed and just need a caesar/vigenere crack? etc.
[ ] Epic win phrases when it cracks a cipher, eg. "Yum yum, that was an epic 
    fail of a cipher" or "Totally freaking owned"
[ ] Printing of the process used to arrive at the cipher, eg. Cipher methods 
    used, keywords, the lot.
[X] Implement proper command line parsing using flags (-*) so we can tell the
    program exactly what we need to do.

